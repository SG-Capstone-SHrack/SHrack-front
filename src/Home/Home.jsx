import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';
import { Card, Navbar, Nav, Button, ProgressBar } from 'react-bootstrap';
import axios from 'axios';
import ExerciseStartModal from '../components/ExerciseStartModal';
import { formatISO } from 'date-fns'; //ÎÇ†Ïßú Ìè¨Îß§ÌåÖ ÏúÑÌï¥ Ï∂îÍ∞Ä

const HomePage = () => {
  const [id, setId] = useState(''); //id ÏÉÅÏàò Ï∂îÍ∞Ä
  const [selectedDate, setSelectedDate] = useState(new Date()); //ÎÇ†Ïßú ÏÉÅÏàò Ï∂îÍ∞Ä

  const [exerciseRecords, setExerciseRecords] = useState([]);
  const [showModal, setShowModal] = useState(false);
  const handleLogout = () => {
    //Î°úÍ∑∏ÏïÑÏõÉ Ïãú : Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú auth ÏÇ≠Ï†ú ÌõÑ ÌôàÏúºÎ°ú Ïù¥Îèô
    localStorage.removeItem('auth');
    window.location.href = process.env.PUBLIC_URL;
  };
  useEffect(() => {
    //Î°úÍ∑∏Ïù∏ Ïãú : Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú auth Í∞ÄÏ†∏ÏôÄÏÑú Ï†ÄÏû•
    const authId = localStorage.getItem('auth');
    setId(authId);
  }, []);

  const handleDateChange = date => {
    //date-pickerÏóêÏÑú ÎÇ†Ïßú ÏÑ†ÌÉùÌï† ÎïåÎßàÎã§ ÏÑ†ÌÉùÌïú ÎÇ†ÏßúÎ°ú ÏÉÅÏàò Î≥ÄÍ≤Ω ÌõÑ Ï†ÄÏû•
    setSelectedDate(date);
  };
  useEffect(() => {
    //ÎÇ†Ïßú ÏÑ†ÌÉùÌï† ÎïåÎßàÎã§ Îç∞Ïù¥ÌÑ∞ Î≥¥ÎÇ¥Í∏∞ ÏúÑÌï¥ ÎÅùÎ∂ÄÎ∂ÑÏóê [selectedDate] Ï∂îÍ∞Ä
    sendExerciseData();
  }, [selectedDate]);

  const sendExerciseData = async () => {
    //ÏÑúÎ≤ÑÏóê Îç∞Ïù¥ÌÑ∞ Î≥¥ÎÇ¥Í∏∞(id, date Ï†ïÎ≥¥)
    try {
      const formattedDate = formatISO(selectedDate, { representation: 'date' });
      const exerciseData = {
        id,
        date: formattedDate,
      };
      const response = await axios.post(
        //ÏÑúÎ≤ÑÏóêÏÑú id, dateÏ†ïÎ≥¥Ïóê Îß§Ïπ≠ÌïòÎäî Îç∞Ïù¥ÌÑ∞ Î∞õÏïÑÏò§Í∏∞ => ÏÑúÎ≤ÑÎ°ú ÎÑòÍ∏∏ Îïå CORS ÏóêÎü¨ Î∞úÏÉùÌïòÎäî Í≤É ÎïåÎ¨∏Ïóê allow cors ÏÑ§ÏπòÌïòÍ≥† ÏºúÏÑú ÌÖåÏä§Ìä∏ ÏßÑÌñâÌñàÏäµÎãàÎã§
        'https://shrack.p-e.kr/exercise_log',
        exerciseData,
        {
          headers: {
            'Content-Type': 'application/json', //json ÌòïÏãùÏúºÎ°ú Î∞õÏïÑÏò§Îäî Î∂ÄÎ∂Ñ
          },
        },
      );
      setExerciseRecords(response.data.exercise_log); //Îã§Ïãú exercise_logÏóê Ï†ÄÏû•
    } catch (error) {
      console.log(error);
    }
  };

  const handleAddExercise = () => {
    //Î™®Îã¨Ï∞Ω ÎùÑÏö∞Í≥† Îã´Îäî Î∂ÄÎ∂Ñ
    setShowModal(true);
  };
  const handleModalClose = () => {
    setShowModal(false);
  };
  const handleModalSubmit = () => {
    setShowModal(false);
  };

  return (
    //ÏÉÅÎã® Î©îÎâ¥Î∞î
    <div>
      <Navbar bg="primary" variant="dark" expand="lg">
        <Navbar.Brand>SHrack</Navbar.Brand>
        <Navbar.Toggle aria-controls="basic-navbar-nav" />
        <Navbar.Collapse id="basic-navbar-nav">
          <Nav className="mr-auto">
            <Nav.Link href="#">MyPage</Nav.Link>
            <Nav.Link onClick={handleLogout}>Logout</Nav.Link>
          </Nav>
        </Navbar.Collapse>
      </Navbar>

      <div
        style={{
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          height: '100vh',
          padding: '0 20px',
        }}>
        <div style={{ width: '500px' }}>
          <Card.Body>
            <Card.Title style={{ marginBottom: '20px' }}>
              Welcome to SHrack! Hello {id ? `User ${id}` : ''}
            </Card.Title>
            <DatePicker
              selected={selectedDate}
              onChange={handleDateChange}
              style={{ marginBottom: '20px' }}
            />
            {selectedDate && (
              <div>
                <h6>
                  Exercise information on {selectedDate.toLocaleDateString()}
                </h6>
                {exerciseRecords.length > 0 ? (
                  exerciseRecords.map((record, index) => (
                    <Card key={index} style={{ marginBottom: '10px' }}>
                      <Card.Body>
                        <Card.Title>{record.exercise_name}</Card.Title>
                        <Card.Text>Start Time: {record.start_time}</Card.Text>
                        <Card.Text>End Time: {record.end_time}</Card.Text>
                        <Card.Text>
                          Total Exercise Time: {record.exercise_time}
                        </Card.Text>
                        <Card.Text>Mass: {record.mass}</Card.Text>
                        <Card.Text>Count: {record.count}</Card.Text>
                      </Card.Body>
                    </Card>
                  ))
                ) : (
                  <p>
                    No exercise records found for{' '}
                    {selectedDate.toLocaleDateString()}
                  </p>
                )}
              </div>
            )}
            <Button
              variant="primary"
              style={{
                width: '75px',
                height: '75px',
                position: 'fixed',
                bottom: '20px',
                right: '20px',
                borderRadius: '50%',
              }}
              onClick={handleAddExercise}>
              üèãÔ∏è
            </Button>
          </Card.Body>
        </div>
      </div>

      <ExerciseStartModal isModalShow={showModal} setModalShow={setShowModal} />
    </div>
  );
};

export default HomePage;
